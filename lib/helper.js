// Generated by CoffeeScript 1.6.3
var appConfig, exec, fs, path, print, readline, spawn, _ref;

appConfig = require('../appConfig');

path = require("path");

print = require('sys').print;

readline = require('readline');

_ref = require('child_process'), spawn = _ref.spawn, exec = _ref.exec;

fs = require('fs');

readline = require('readline');

exec = function(cmdName, project, argv) {
  var arg, cmd, params, projectInfo, _i, _len;
  if (!project) {
    print("项目名称不能为空");
    return false;
  }
  projectInfo = appConfig.getProjectInfo(project);
  params = [project, projectInfo.root, projectInfo.dir, appConfig.remoteGit, projectInfo.root.split(':')[0] + ":"];
  if (argv != null) {
    for (_i = 0, _len = argv.length; _i < _len; _i++) {
      arg = argv[_i];
      params.push(arg);
    }
  }
  cmd = spawn(path.join(__dirname, "../cmd/" + cmdName + ".cmd"), params);
  cmd.stdout.on('data', function(data) {
    return print(data.toString());
  });
  cmd.stderr.on('data', function(data) {
    print(data.toString());
    return cmd.error = data;
  });
  return cmd;
};

exports.exec = exec;

exports.getName = function(callback) {
  var args, rl;
  args = process.argv.splice(2);
  if (args[0]) {
    return callback.apply(this, args);
  } else {
    rl = readline.createInterface({
      input: process.stdin,
      output: process.stdout
    });
    return rl.question("请输入项目名称：        ", function(p) {
      rl.close();
      return callback(p);
    });
  }
};

String.prototype.endsWith = function(str, caseInsensitive) {
  var reg;
  if (caseInsensitive == null) {
    caseInsensitive = true;
  }
  reg = new RegExp(str.replace(/[$%()*+.?\[\\\]{|}]/g, "\\$&") + "$", caseInsensitive ? "i" : "");
  return reg.test(this);
};

String.prototype.startsWith = function(str, caseInsensitive) {
  var reg;
  if (caseInsensitive == null) {
    caseInsensitive = true;
  }
  reg = new RegExp("^" + str.replace(/[$%()*+.?\[\\\]{|}]/g, "\\$&"), caseInsensitive ? "i" : "");
  return reg.test(this);
};
