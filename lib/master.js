// Generated by CoffeeScript 1.6.3
var appConfig, io, master,
  __hasProp = {}.hasOwnProperty;

io = require('socket.io');

appConfig = require('/appConfig');

master = false;

exports.getConnSlaves = function() {
  var slave, slaveid, _ref, _results;
  _ref = master.sockets.sockets;
  _results = [];
  for (slaveid in _ref) {
    if (!__hasProp.call(_ref, slaveid)) continue;
    slave = _ref[slaveid];
    _results.push({
      'server': slave.endpoint,
      watch: slave.watchList
    });
  }
  return _results;
};

exports.listen = function(server) {
  console.log(" 作为" + appConfig.runAs + "运行");
  exports.master = master = io.listen(server, {
    'log level': 0
  });
  return master.sockets.on('connection', function(socket) {
    var address;
    address = socket.handshake.address;
    socket.endpoint = address.address + ":" + address.port;
    socket.watchList = [];
    console.log(socket.endpoint + " 成功连接");
    socket.on('syncAll', function(project) {
      var slave, slaveid, synedcount, totalSalves, _ref, _results;
      checkTimeOut(project);
      synedcount = 0;
      totalSalves = (function() {
        var _ref, _results;
        _ref = master.sockets.sockets;
        _results = [];
        for (slaveid in _ref) {
          if (!__hasProp.call(_ref, slaveid)) continue;
          slave = _ref[slaveid];
          if (slave.isSlave && !slave.disconnected && slave.id !== socket.id) {
            _results.push(slaveid);
          }
        }
        return _results;
      })();
      totalSalves = totalSalves.length;
      _ref = master.sockets.sockets;
      _results = [];
      for (slaveid in _ref) {
        if (!__hasProp.call(_ref, slaveid)) continue;
        slave = _ref[slaveid];
        if (slave.isSlave && !slave.disconnected && slave.id !== socket.id) {
          _results.push(slave.emit('sync', project, function(data) {
            if (data.event !== 'notExist') {
              socket.send(data.result);
            }
            if (data.event === 'notExist' || data.event === 'synced') {
              synedcount++;
            }
            if (synedcount === totalSalves) {
              return socket.emit('syncEnd', '所有服务器同步完成');
            }
          }));
        }
      }
      return _results;
    });
    socket.on('master', function(watchs) {
      socket.isSlave = true;
      if (watchs) {
        return socket.watchList = watchs;
      }
    });
    socket.on("disconnect", function() {
      return console.log(socket.endpoint + "已经断开连接");
    });
    return socket.on('message', function(data) {
      return console.log(data);
    });
  });
};
